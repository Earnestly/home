" HOME/.vim/vimrc

" If I am going to tolerate a .vim directory then at least attempt to keep
" everything isolated to that location.
set undodir=$HOME/.vim/undo
set directory=$HOME/.vim/swap
set backupdir=$HOME/.vim/backup
set viminfofile=$HOME/.vim/viminfo

" XXX Vim doesn't mkdir these paths when needed (bug?).
call mkdir(&backupdir, "p")
call mkdir(&directory, "p")
call mkdir(&undodir, "p")

" Replace ex-mode with vim's command-line window.
map Q q:

syntax on
filetype indent plugin on

set title
set number
set hidden
set backup
set showcmd
set ttyfast
set autoread
set undofile
set wildmenu
set linebreak
set smartcase
set ignorecase
set lazyredraw
set nomodeline
set nohlsearch
set scrolloff=1
set numberwidth=1
set colorcolumn=81
set cinoptions+=t0
set ttimeoutlen=50
set backspace=indent,eol,start

set list
set listchars=tab:\ \ ,trail:~

set cursorline
set laststatus=2
set statusline=%n\ %F\ %M%=%y%w%r%h\ %{&fenc}\ %l,%c\ %p%%\ %L

set expandtab
set tabstop=4
set shiftwidth=4

if !empty($DISPLAY)
    " Use the Xorg's primary buffer as default register.
    set clipboard=unnamed
endif

if &t_Co >= 256 && (&term =~# '^xterm' || &term =~# '^tmux')
    " This causes the :terminal feature to use libvterm's standard
    " palette.  See g:terminal_ansi_colors to set them.
    set termguicolors

    " These are only set if TERM is equal to xterm, as I use tmux as well
    " they need to be set explicitly.  See :help xterm-true-color
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

    set background=dark

    let base16colorspace=256
    colorscheme base16-yesterdaynight

    " By default my theme highlights the matching parenthesis with a
    " lighter colour, while darkening the cursor, causing me endless
    " confusion.  Using standout reverses the effect.
    hi MatchParen gui=standout
endif

" Use bsdtar for all the additional formats it supports over GNU tar.
let g:tar_cmd = 'bsdtar'
let g:tar_secure = 1

" Tell vim about additional file extensions we can now use.
autocmd BufReadCmd *.iso,*.rar,*.7z call tar#Browse(expand("<amatch>"))

runtime! macros/matchit.vim
