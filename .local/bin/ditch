#!/bin/sh --
# ditch - display menu of twitch streamers currently online
# requires jq curl bemenu mpv

cachedir=${XDG_CACHE_HOME:-$HOME/.cache}/ditch
mkdir -p -- "$cachedir"

# Ensure the file exists for find but without modifying its file information.
: >> "$cachedir"/livestreams

# As the GraphQL API used by twitch is nominally private it might be
# prudent to reduce the presence upon it by caching results.
renew=$(touch -d "$(TZ=UTC+00:15:00 date +%FT%TZ)" -- "$cachedir"/timeref
        TZ=UTC find "$cachedir"/livestreams ! -newer "$cachedir"/timeref
        rm -f -- "$cachedir"/timeref)

if [ -s "$cachedir"/livestreams ] && ! { [ "$renew" ] || [ "$1" = -f ]; }; then
    prompt=STREAM
else
    prompt='STREAM *'
    tmp=${TMPDIR:-/tmp}/ditch_$$

    if mkdir -p -- "$tmp"/data; then
        # Despite having tested this query with a number of users greater than
        # 1800 successfully, I have chosen to use 500 as a reasonable limit as
        # no such figure is documented.
        # shellcheck disable=SC1004
        tmp="$tmp"/data awk -v limit=500 '
            function request(value,  dest){
                dest = path "/" NR

                printf "[{\"query\":\"query{users(logins:[%s]){login,stream{title,viewersCount,game{name}}}}\"}]", value > dest

                # Make filepath safe for curl config format.
                gsub(/\\/, "\\\\", dest)
                gsub(/"/, "\\\"", dest)
                gsub(/\n/, "\\n", dest)

                # Placing "next" first in the config seems harmless, whereas if
                # it were last curl would warn of a missing url.
                printf "next\n"

                printf "url https://gql.twitch.tv/gql\n"
                printf "header \"Client-ID: kimne78kx3ncx6brgo4mv6wki5h1ko\"\n"
                printf "data \"@%s\"\n", dest
                printf "output \"%s.result\"\n", dest
                printf "write-out %s\n", "%{filename_effective}\\n"
            }

            BEGIN           {path = ENVIRON["tmp"]}
            NR % limit == 1 {if(users) request(users); users = ""}
            NF && !/^#/     {users = users "\\\"" $1 "\\\""}
            END             {if(users) request(users)}' \
        | curl --parallel-max 15 -gqsSZK - \
        | xargs -E '' cat -- \
        | jq -sr '[.[] | arrays[] | select(.data.users).data.users[] | select(.stream)]
                       | sort_by(-.stream.viewersCount)[]
                       | [.login, .stream.viewersCount, .stream.game.name[:50], .stream.title]
                       | @tsv' \
        | column -ts '	' > "$cachedir"/livestreams

        rm -rf -- "$tmp"
    fi
fi

prompt="$prompt $(wc -l < "$cachedir"/livestreams)"

menu --ifne -l30 -p "$prompt" < "$cachedir"/livestreams | while read -r user _; do
    if [ "$user" ]; then
        printf '%s\n' "$user" >> "$cachedir"/stats
        xdg-open https://www.twitch.tv/"$user" &
    fi
done
