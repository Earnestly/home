#!/usr/bin/env bash
# mkwineprefix
# Creates a sane prefix, unlinking all directories pointing at the users home
# and remaps z: to /mnt instead of / and disables the winemenubuilder to
# prevent .desktop/mime pollution.

# [TODO]: Add a mechanism to load external registery snippets.

usage() {
    cat <<EOF
Usage: mkwineprefix [options] NAME

Options:
    -a ARCH  Architecture, 32 or 64 (Default: 32)
    -m       Enable Mono installation
    -g       Enable Gecko installation
    -r       Remap z: to /mnt instead of /
    -h       This help message

NAME:
    The path to the prefix, if not absolute then prepend pwd.
EOF
}

# We need at least one argument.
if (($# == 0)); then
    usage
    exit 1
fi

while (($#)); do
    case "$1" in
        -a) shift; arch="$1" ;;
        -m) with_mono=1 ;;
        -g) with_gecko=1 ;;
        -r) remap_z=1 ;;
        -h) usage
            exit
            ;;
        *)  prefix="$1"
            ;;
    esac
    shift
done


# Make sure we get a valid architecture, if we don't assume 32
if [[ -z "$arch" ]]; then
    arch=32
fi

# If arch was set to something make sure it's valid for our needs
if [[ "$arch" != @(32|64) ]]; then
    printf 'No valid architectures found, can only be 32 or 64\n' >&2
    exit 1
fi

# Check that we got something for the prefix
if [[ -n "$prefix" ]]; then

    # Make sure it's an absolute path by prepending PWD
    if [[ "${prefix:0:1}" != "/" ]]; then
        export WINEPREFIX="$PWD"/"$prefix"
    else
        export WINEPREFIX="$prefix"
    fi
else
    printf 'No prefix was found, bailing.\n' >&2
    exit 1
fi

# Check if the prefix already exists, is this even necessary?
if [[ -d "$WINEPREFIX"/dosdevices ]]; then
    printf 'Found a dosdevices directory\n' >&2
    printf 'The prefix probably already exists\n' >&2
    exit 1
fi

# Enable both if set by unsetting overrides.
if ((with_mono & with_gecko)); then
    export WINEDLLOVERRIDES="winemenubuilder.exe=d"

# Just enable mono.
elif ((with_mono)); then
    export WINEDLLOVERRIDES="winemenubuilder.exe,mshtml=d"

# Just enable gecko.
elif ((with_gecko)); then
    export WINEDLLOVERRIDES="winemenubuilder.exe,mscoree=d"

# Default disable both.
else
    export WINEDLLOVERRIDES="winemenubuilder.exe,mscoree,mshtml=d"
fi

if ((arch == 32)); then
    export WINEARCH=win32
else
    export WINEARCH=win64
fi

# Initialise the prefix.
wineboot -i

# Remap Z:
if ((remap_z)); then
    if [[ -d "$WINEPREFIX"/dosdevices/z: ]]; then
        rm -r "$WINEPREFIX"/dosdevices/z:

        # Recreate it and point to /mnt instead of /
        ln -sf /mnt "$WINEPREFIX"/dosdevices/z:
    fi
fi

# Remove all the symlinks pointing at the user home directory.
# Note: Since a prefix is always going to be Windows XP we don't need to test
#       for windows 7+ directories during the creation of a prefix using this
#       script.
for dir in Desktop 'My Documents' 'My Music' 'My Pictures' 'My Videos'; do
    rm "$WINEPREFIX"/drive_c/users/"$USER"/"$dir"
    mkdir -p "$WINEPREFIX"/drive_c/users/"$USER"/"$dir"
done

# cat > "$WINEPREFIX"/colors.reg <<EOF
# REGEDIT4
# [HKEY_CURRENT_USER\Control Panel\Colors]
# "Background"="33 33 33"
# EOF


# cat > "$WINEPREFIX"/virtual_desktop.reg <<EOF
# REGEDIT4

# [HKEY_CURRENT_USER\Software\Wine\Explorer]
# "Desktop"="Default"
# [HKEY_CURRENT_USER\Software\Wine\Explorer\Desktops]
# "Default"="800x600"
# EOF

# wine regedit /S "$WINEPREFIX"/colors.reg
# wine regedit /S "$WINEPREFIX"/virtual_desktop.reg
