#!/bin/bash
# asr <package>

# Download official Arch Linux PKGBUILDs and source files directly from the
# svntogit repositories.

# Oh boy, here we go!
pkgname="$1"

# A bit of future-proofing.
urls=('git://projects.archlinux.org/svntogit/packages.git'
      'git://projects.archlinux.org/svntogit/community.git')

status="${#urls[@]}"
for url in "${urls[@]}"; do
    # Determine which repository the package exists in.
    if git ls-remote --exit-code "$url" refs/heads/packages/"$pkgname"; then
        git clone --no-checkout --branch packages/"$pkgname" --single-branch "$url" "$pkgname"
        # Break out if we succeed to avoid duplicate packages being found.
        break
    else
        ((status--))
    fi
done


#read -r repo name < <(expac -S '%r %n-%v' "$pkgname")
#gzip -cd /var/lib/pacman/sync/"$repo".db | grep --binary-files=text "$pkgname"
#???? read -r pkgbase < <(grep -A1 %BASE% ...?)
#profit!

# Fail if we've gone through the array elements without success.
if ((!status)); then
    printf -- '%s: cannot locate package.\n' "$pkgname" >&2
    printf -- 'Make sure the pkgname is not from a split-package\n' >&2
    exit 1
fi

# Checkout trunk and clean up left overs.
if [[ -d "$pkgname" ]]; then
    cd "$pkgname"
    git checkout HEAD:trunk -- .
else
    # This should never happen.
    printf -- 'Directory does not exist.\n' >&2
    exit 1
fi
