#!/usr/bin/env bash
# startx
# Alternative, simpler startx which makes use of the XDG specification and
# systemd

# Make sure we aren't running in an xserver
if [[ -n "$DISPLAY" ]]; then
    exit 1
fi

xinitrc="${XDG_CONFIG_HOME:-$HOME/.config}"/xinitrc
log="${XDG_CACHE_HOME:-$HOME/.cache}"/xsession.log

if [[ -n "$XAUTHORITY" ]]; then
    export XAUTHORITY
else
    export XAUTHORITY="$XDG_RUNTIME_DIR"/X11-authority
fi

# Delete this when using systemd and dbus.socket/service
unset DBUS_SESSION_BUS_ADDRESS

unset SESSION_MANAGER

if [[ -n "$XDG_VTNR" ]]; then
    export DISPLAY=:"$XDG_VTNR"
else
    printf 'Apparently XDG_VTNR is not set, bailing out.\n' >&2
    exit 1
fi

# I can blindly add a new entry with xauth because this is stored in a tmpfs
xauth -q add "$DISPLAY" . "$(mcookie)" &> /dev/null

# # If using systemd --user with dbus.service
# sysdopts=(
#     --user
#     --scope
#     --unit="xinit-$DISPLAY.scope"
#     --description="Simple xinit wrapper"
# )

serveropts=(
    vt"$XDG_VTNR" 
    -noreset
    -nolisten tcp 
    -auth "$XAUTHORITY"
)

exec xinit "${1:-$xinitrc}" -- "$DISPLAY" "${serveropts[@]}" "$@" &> "$log"
# exec systemd-run "${sysdopts[@]}" xinit "${1:-$xinitrc}" -- "$DISPLAY" "${serveropts[@]}" "$@"
