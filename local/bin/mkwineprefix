#!/bin/sh --
# mkwineprefix - creates a wine prefix or updates it

# requires wine

# Unlinks all directories pointing at the users home, optionally remaps z: to
# /mnt instead of / and disables winemenubuilder to prevent .desktop/mime
# generation.

# TODO complete a mechanism to load external registery snippets

readonly argv0=mkwineprefix

usage() {
    cat <<!
usage: $argv0 [-mgrh] [-a winearch] prefix

options
    -a winearch  win32 or win64 (default: win32)
    -m           enable mono installation
    -g           enable gecko installation
    -r           remap z: to /mnt instead of /
    -h           this help message

prefix
    The path to the prefix, the current working directory is
    prepended if not absolute
!
}

error() {
    printf -- "%s: $2" "$argv0" "${@:3}" >&2
    exit "$1"
}

warn() {
    printf -- "%s: $1" "$argv0" "${@:2}" >&2
}

while getopts :a:gmrh arg; do
    case $arg in
        a) arch=$OPTARG ;;
        g) with_gecko=1 ;;
        m) with_mono=1 ;;
        r) remap_z=1 ;;
        h) usage; exit ;;
        *) printf 'usage: %s [-mgrh] [-a winearch] prefix\n' "$argv0" >&2; exit 1
    esac
done
shift $((OPTIND - 1))

prefix=$1

case $arch in
    '') arch=win32 ;;
    win32) export WINEARCH=win32 ;;
    win64) export WINEARCH=win64 ;;
    *) error 1 '%s: invalid architecture (win32 or win64)\n' "$arch"
esac

if ! prefix=$(readlink -f "$1"); then
   error 1 '%s: unable to determine canonical path for the prefix\n' "$1"
fi

export WINEPREFIX="$prefix"

if test -d "$WINEPREFIX/dosdevices"; then
    warn '%s: prefix already exists, updating\n' "$WINEPREFIX"
    operation=-u
fi

case $with_mono-$with_gecko in
    1-1) export WINEDLLOVERRIDES='winemenubuilder.exe=d' ;;
    1-0) export WINEDLLOVERRIDES='winemenubuilder.exe,mshtml=d' ;;
    0-1) export WINEDLLOVERRIDES='winemenubuilder.exe,mscoree=d' ;;
    *-*) export WINEDLLOVERRIDES='winemenubuilder.exe,mscoree,mshtml=d'
esac

# Initialise the prefix now so we can fix it before any work is done with it.
if ! wine wineboot "${operation:--i}"; then
    exit
fi

# Remap Z: which limits what wine can see, the default / gives access to
# everything the user does.  Selecting /mnt as an alternative due to most isos
# being mounted there for installation purposes.
if test "$remap_z" -a -d "$WINEPREFIX/dosdevices/z:"; then
    rm -f -- "$WINEPREFIX/dosdevices/z:"

    # Recreate it and point to /mnt instead of /.
    ln -sf -- /mnt "$WINEPREFIX/dosdevices/z:"
fi

# Remove all the symlinks pointing at the user home directory.
# Note: Since a prefix is always going to be created as Windows XP we don't
#       need to test for windows 7+ directories.  This would only matter if
#       we were going to modify extant prefixes.
for dir in Desktop 'My Documents' 'My Music' 'My Pictures' 'My Videos'; do
    rm -f -- "$WINEPREFIX/drive_c/users/$USER/$dir"
    mkdir -p -- "$WINEPREFIX/drive_c/users/$USER/$dir"
done

# Return the created prefix.
printf -- '%s\n' "$WINEPREFIX"

# cat > "$WINEPREFIX"/colors.reg <<!
# REGEDIT4
# [HKEY_CURRENT_USER\Control Panel\Colors]
# "Background"="33 33 33"
# !

# cat > "$WINEPREFIX"/virtual_desktop.reg <<!
# REGEDIT4
# [HKEY_CURRENT_USER\Software\Wine\Explorer]
# "Desktop"="Default"
# [HKEY_CURRENT_USER\Software\Wine\Explorer\Desktops]
# "Default"="1024x786"
# !

# wine regedit /S "$WINEPREFIX"/colors.reg
# wine regedit /S "$WINEPREFIX"/virtual_desktop.reg
