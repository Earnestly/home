#!/bin/sh --
# ditch - create a menu using the twitch team and stream APIs

# requires awk jq curl bemenu mpv youtube-dl

# POSIX sh with local
# shellcheck disable=SC2039

readonly argv0=ditch

# Number of entries to display in the menu before scrolling.
readonly lines=30

# Feel free to use these API keys.
# Backup: jzkbprff40iqj646a697cyrvl0zt2m6 (youtube-dl)
readonly client_id=rfbp97unyyikyzw1y9cy87iii29lgjk

chunkurls() {
    # Twitch allows up to a 100 streamers in a single query when the limit is
    # raised using &limit=100.  This awk script chops up the list of streamers
    # into chunks of 100, each comma separated and appends the &limit= with an
    # appropriate value.
    awk -v interval=100 '
    BEGIN{
        i = 1
    }

    NF < 1{
        noinput = 1
        exit
    }

    i == 1{
        printf "https://api.twitch.tv/kraken/streams?channel="
    }

    (NR % interval){
        ORS=","
        print $0
        ++i
    }

    !(NR % interval){
        ORS="\n"
        print $0 "&limit=" i
        i = 1
    }

    END{
        if(noinput)
            exit

        ORS="\n"
        print "&limit=" i
    }'
}

# NOTE: This leaves the responsibility of multi-tasking potentially many
#       processes to the kernel.  Neither gnu parallel(1) or xargs(1) proved
#       to be very capable of this without complication and awkwardness, and
#       neither were any faster.
pulljson() {
    local url

    while read -r url; do
        if [ "$url" ]; then
            curl -sH "Client-ID: $client_id" "$url" | readjson &
        fi
    done

    wait
}

readjson() {
    jq -r '.streams[] |
           [.viewers, .channel.name, .channel.game, .channel.status] | @tsv'
}

viewsort() {
    sort -t '	' -nr | cut -f 1 --complement | column -ts '	'
}

stream() {
    local streamer

    while read -r streamer _; do
        if [ "$streamer" ]; then
            # Background mpv here in order to support multi-selection.
            mpv --quiet https://twitch.tv/"$streamer" &
        fi
    done
}

chunkurls | pulljson | viewsort | menu --ifne -l "$lines" -p 'STREAM' | stream
